{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","foundSelectedTab","some","tab","id","className","map","i","href","onClick","event","preventDefault","title","find","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"sKASaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAmBH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,MAEhE,OACE,gCACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GAAN,OACR,oBACEF,UAAWN,IAAkBI,EAAIC,KAAQH,IAAqBM,EAC1D,YACA,GAHN,SAME,mBACEC,KAAI,WAAML,EAAIC,IACdK,QAAS,SAAAC,GACPA,EAAMC,iBAEFR,EAAIC,KAAOL,GACbC,EAAcG,IANpB,SAUGA,EAAIS,SAZFT,EAAIC,WAmBjB,qBAAKC,UAAU,QAAQ,UAAQ,cAA/B,mBACGP,EAAKe,MAAK,SAAAV,GAAG,OAAIJ,IAAkBI,EAAIC,aAD1C,aACG,EAA4CU,cCxCxChB,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,eACxC,CAAEV,GAAI,QAASQ,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASlB,EAAK,IAApD,mBAAOmB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKb,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,gCAEGY,EAAYL,SAGf,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAekB,EAAYb,GAC3BJ,cAAekB,QCrBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b0843e36.chunk.js","sourcesContent":["import React from 'react';\nimport Tab from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected(tab: Tab): void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const foundSelectedTab = tabs.some(tab => selectedTabId === tab.id);\n\n  return (\n    <div>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, i) => (\n            <li\n              className={selectedTabId === tab.id || (!foundSelectedTab && !i)\n                ? 'is-active'\n                : ''}\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                onClick={event => {\n                  event.preventDefault();\n\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {tabs.find(tab => selectedTabId === tab.id)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is&nbsp;\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}